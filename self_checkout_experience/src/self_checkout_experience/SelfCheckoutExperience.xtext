grammar self_checkout_experience.SelfCheckoutExperience with org.eclipse.xtext.common.Terminals

generate selfCheckoutExperience "http://www.SelfCheckoutExperience.self_checkout_experience"

//Model:
//	greetings+=Greeting*;
//	
//Greeting:
//	'Hello' name=ID '!';

import "http://www.eclipse.org/emf/2002/Ecore" as ecore


Self_checkout:
	(pickstatemens+=PickStatement | walkstatements += WalkStatement)*
	checkout = Checkout?
;	
	
PickStatement:
	"pick" "up" name=ID
	holdingItem = (AddToBasket | Drop)
;

AddToBasket:
	"add" "to" "basket" item=[PickStatement] 
;

Drop:
	"drop" item=[PickStatement]
;

	
WalkStatement:
	MoveStatement |
	TurnStatement |
	LoopStatement |
	VariableDeclaration
;


VariableDeclaration:
	"var" name=ID "=" value=INT
;

LoopStatement:
	count = Addition "times" "do"
	  statements += WalkStatement+
	"end"
;

MoveStatement:
	command = MoveCommand "(" steps = Addition ")"
;

enum MoveCommand:
	forward | backward
;

TurnStatement:
	"turn" command = TurnCommand "by" degrees = Addition "degrees"
;

enum TurnCommand:
	left | right
;

Addition returns Expression:
	Multiplication ({Addition.left = current} operator+=("+"|"-") right+=Multiplication)*
;

Multiplication returns Expression:
	Primary ({Multiplication.left = current} operator+=("*"|"/") right+=Primary)*
;

Primary returns Expression:
	IntLiteral |
	IntVarExpression |
	RealLiteral |
	"(" Addition ")"
;

IntLiteral:
	val = INT
;

RealLiteral:
	val = REAL
;

IntVarExpression:
	var = [VariableDeclaration]
;

REAL returns ecore::EFloat hidden():
	INT? "." INT
; 

Checkout:
	"go" "to" "till"
	scan += Scan+
	pay = Pay
;

Scan:
	"scan" "at" "till" name=ID
	addToBag += AddToBag*
;

AddToBag:
	"add" "to" "bag" bagItem=[Scan]
;

enum Pay:
	pay
;







	
	
//	
//	
