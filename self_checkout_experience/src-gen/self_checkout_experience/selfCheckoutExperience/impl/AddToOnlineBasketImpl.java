/**
 * generated by Xtext 2.25.0
 */
package self_checkout_experience.selfCheckoutExperience.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import self_checkout_experience.selfCheckoutExperience.AddToOnlineBasket;
import self_checkout_experience.selfCheckoutExperience.Expression;
import self_checkout_experience.selfCheckoutExperience.ItemDef;
import self_checkout_experience.selfCheckoutExperience.RemoveFromOnlineBasket;
import self_checkout_experience.selfCheckoutExperience.SelfCheckoutExperiencePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Add To Online Basket</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link self_checkout_experience.selfCheckoutExperience.impl.AddToOnlineBasketImpl#getItemCount <em>Item Count</em>}</li>
 *   <li>{@link self_checkout_experience.selfCheckoutExperience.impl.AddToOnlineBasketImpl#getItem <em>Item</em>}</li>
 *   <li>{@link self_checkout_experience.selfCheckoutExperience.impl.AddToOnlineBasketImpl#getRemoveFromOnlineBasket <em>Remove From Online Basket</em>}</li>
 * </ul>
 *
 * @generated
 */
public class AddToOnlineBasketImpl extends MinimalEObjectImpl.Container implements AddToOnlineBasket
{
  /**
   * The cached value of the '{@link #getItemCount() <em>Item Count</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItemCount()
   * @generated
   * @ordered
   */
  protected Expression itemCount;

  /**
   * The cached value of the '{@link #getItem() <em>Item</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItem()
   * @generated
   * @ordered
   */
  protected ItemDef item;

  /**
   * The cached value of the '{@link #getRemoveFromOnlineBasket() <em>Remove From Online Basket</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRemoveFromOnlineBasket()
   * @generated
   * @ordered
   */
  protected RemoveFromOnlineBasket removeFromOnlineBasket;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected AddToOnlineBasketImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SelfCheckoutExperiencePackage.Literals.ADD_TO_ONLINE_BASKET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Expression getItemCount()
  {
    return itemCount;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetItemCount(Expression newItemCount, NotificationChain msgs)
  {
    Expression oldItemCount = itemCount;
    itemCount = newItemCount;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT, oldItemCount, newItemCount);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItemCount(Expression newItemCount)
  {
    if (newItemCount != itemCount)
    {
      NotificationChain msgs = null;
      if (itemCount != null)
        msgs = ((InternalEObject)itemCount).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT, null, msgs);
      if (newItemCount != null)
        msgs = ((InternalEObject)newItemCount).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT, null, msgs);
      msgs = basicSetItemCount(newItemCount, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT, newItemCount, newItemCount));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ItemDef getItem()
  {
    if (item != null && item.eIsProxy())
    {
      InternalEObject oldItem = (InternalEObject)item;
      item = (ItemDef)eResolveProxy(oldItem);
      if (item != oldItem)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM, oldItem, item));
      }
    }
    return item;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public ItemDef basicGetItem()
  {
    return item;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItem(ItemDef newItem)
  {
    ItemDef oldItem = item;
    item = newItem;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM, oldItem, item));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public RemoveFromOnlineBasket getRemoveFromOnlineBasket()
  {
    return removeFromOnlineBasket;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRemoveFromOnlineBasket(RemoveFromOnlineBasket newRemoveFromOnlineBasket, NotificationChain msgs)
  {
    RemoveFromOnlineBasket oldRemoveFromOnlineBasket = removeFromOnlineBasket;
    removeFromOnlineBasket = newRemoveFromOnlineBasket;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET, oldRemoveFromOnlineBasket, newRemoveFromOnlineBasket);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRemoveFromOnlineBasket(RemoveFromOnlineBasket newRemoveFromOnlineBasket)
  {
    if (newRemoveFromOnlineBasket != removeFromOnlineBasket)
    {
      NotificationChain msgs = null;
      if (removeFromOnlineBasket != null)
        msgs = ((InternalEObject)removeFromOnlineBasket).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET, null, msgs);
      if (newRemoveFromOnlineBasket != null)
        msgs = ((InternalEObject)newRemoveFromOnlineBasket).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET, null, msgs);
      msgs = basicSetRemoveFromOnlineBasket(newRemoveFromOnlineBasket, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET, newRemoveFromOnlineBasket, newRemoveFromOnlineBasket));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT:
        return basicSetItemCount(null, msgs);
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET:
        return basicSetRemoveFromOnlineBasket(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT:
        return getItemCount();
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM:
        if (resolve) return getItem();
        return basicGetItem();
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET:
        return getRemoveFromOnlineBasket();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT:
        setItemCount((Expression)newValue);
        return;
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM:
        setItem((ItemDef)newValue);
        return;
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET:
        setRemoveFromOnlineBasket((RemoveFromOnlineBasket)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT:
        setItemCount((Expression)null);
        return;
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM:
        setItem((ItemDef)null);
        return;
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET:
        setRemoveFromOnlineBasket((RemoveFromOnlineBasket)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM_COUNT:
        return itemCount != null;
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__ITEM:
        return item != null;
      case SelfCheckoutExperiencePackage.ADD_TO_ONLINE_BASKET__REMOVE_FROM_ONLINE_BASKET:
        return removeFromOnlineBasket != null;
    }
    return super.eIsSet(featureID);
  }

} //AddToOnlineBasketImpl
