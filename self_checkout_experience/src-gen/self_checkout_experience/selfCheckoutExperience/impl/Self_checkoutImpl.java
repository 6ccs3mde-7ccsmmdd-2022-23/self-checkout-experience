/**
 * generated by Xtext 2.25.0
 */
package self_checkout_experience.selfCheckoutExperience.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import self_checkout_experience.selfCheckoutExperience.SelfCheckoutExperiencePackage;
import self_checkout_experience.selfCheckoutExperience.SelfCheckoutInstore;
import self_checkout_experience.selfCheckoutExperience.SelfCheckoutOnline;
import self_checkout_experience.selfCheckoutExperience.Self_checkout;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Self checkout</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link self_checkout_experience.selfCheckoutExperience.impl.Self_checkoutImpl#getSelfCheckoutOnline <em>Self Checkout Online</em>}</li>
 *   <li>{@link self_checkout_experience.selfCheckoutExperience.impl.Self_checkoutImpl#getSelfCheckoutInstore <em>Self Checkout Instore</em>}</li>
 * </ul>
 *
 * @generated
 */
public class Self_checkoutImpl extends MinimalEObjectImpl.Container implements Self_checkout
{
  /**
   * The cached value of the '{@link #getSelfCheckoutOnline() <em>Self Checkout Online</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelfCheckoutOnline()
   * @generated
   * @ordered
   */
  protected EList<SelfCheckoutOnline> selfCheckoutOnline;

  /**
   * The cached value of the '{@link #getSelfCheckoutInstore() <em>Self Checkout Instore</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSelfCheckoutInstore()
   * @generated
   * @ordered
   */
  protected EList<SelfCheckoutInstore> selfCheckoutInstore;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected Self_checkoutImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SelfCheckoutExperiencePackage.Literals.SELF_CHECKOUT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SelfCheckoutOnline> getSelfCheckoutOnline()
  {
    if (selfCheckoutOnline == null)
    {
      selfCheckoutOnline = new EObjectContainmentEList<SelfCheckoutOnline>(SelfCheckoutOnline.class, this, SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_ONLINE);
    }
    return selfCheckoutOnline;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<SelfCheckoutInstore> getSelfCheckoutInstore()
  {
    if (selfCheckoutInstore == null)
    {
      selfCheckoutInstore = new EObjectContainmentEList<SelfCheckoutInstore>(SelfCheckoutInstore.class, this, SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_INSTORE);
    }
    return selfCheckoutInstore;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_ONLINE:
        return ((InternalEList<?>)getSelfCheckoutOnline()).basicRemove(otherEnd, msgs);
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_INSTORE:
        return ((InternalEList<?>)getSelfCheckoutInstore()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_ONLINE:
        return getSelfCheckoutOnline();
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_INSTORE:
        return getSelfCheckoutInstore();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_ONLINE:
        getSelfCheckoutOnline().clear();
        getSelfCheckoutOnline().addAll((Collection<? extends SelfCheckoutOnline>)newValue);
        return;
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_INSTORE:
        getSelfCheckoutInstore().clear();
        getSelfCheckoutInstore().addAll((Collection<? extends SelfCheckoutInstore>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_ONLINE:
        getSelfCheckoutOnline().clear();
        return;
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_INSTORE:
        getSelfCheckoutInstore().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_ONLINE:
        return selfCheckoutOnline != null && !selfCheckoutOnline.isEmpty();
      case SelfCheckoutExperiencePackage.SELF_CHECKOUT__SELF_CHECKOUT_INSTORE:
        return selfCheckoutInstore != null && !selfCheckoutInstore.isEmpty();
    }
    return super.eIsSet(featureID);
  }

} //Self_checkoutImpl
