/**
 * generated by Xtext 2.25.0
 */
package self_checkout_experience.selfCheckoutExperience.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import self_checkout_experience.selfCheckoutExperience.AddToOnlineBasket;
import self_checkout_experience.selfCheckoutExperience.ItemDef;
import self_checkout_experience.selfCheckoutExperience.Search;
import self_checkout_experience.selfCheckoutExperience.SelfCheckoutExperiencePackage;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Search</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link self_checkout_experience.selfCheckoutExperience.impl.SearchImpl#getItemSearch <em>Item Search</em>}</li>
 *   <li>{@link self_checkout_experience.selfCheckoutExperience.impl.SearchImpl#getAddToOnlineBasket <em>Add To Online Basket</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SearchImpl extends MinimalEObjectImpl.Container implements Search
{
  /**
   * The cached value of the '{@link #getItemSearch() <em>Item Search</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getItemSearch()
   * @generated
   * @ordered
   */
  protected ItemDef itemSearch;

  /**
   * The cached value of the '{@link #getAddToOnlineBasket() <em>Add To Online Basket</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAddToOnlineBasket()
   * @generated
   * @ordered
   */
  protected AddToOnlineBasket addToOnlineBasket;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SearchImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return SelfCheckoutExperiencePackage.Literals.SEARCH;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ItemDef getItemSearch()
  {
    return itemSearch;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetItemSearch(ItemDef newItemSearch, NotificationChain msgs)
  {
    ItemDef oldItemSearch = itemSearch;
    itemSearch = newItemSearch;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH, oldItemSearch, newItemSearch);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setItemSearch(ItemDef newItemSearch)
  {
    if (newItemSearch != itemSearch)
    {
      NotificationChain msgs = null;
      if (itemSearch != null)
        msgs = ((InternalEObject)itemSearch).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH, null, msgs);
      if (newItemSearch != null)
        msgs = ((InternalEObject)newItemSearch).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH, null, msgs);
      msgs = basicSetItemSearch(newItemSearch, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH, newItemSearch, newItemSearch));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public AddToOnlineBasket getAddToOnlineBasket()
  {
    return addToOnlineBasket;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAddToOnlineBasket(AddToOnlineBasket newAddToOnlineBasket, NotificationChain msgs)
  {
    AddToOnlineBasket oldAddToOnlineBasket = addToOnlineBasket;
    addToOnlineBasket = newAddToOnlineBasket;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET, oldAddToOnlineBasket, newAddToOnlineBasket);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAddToOnlineBasket(AddToOnlineBasket newAddToOnlineBasket)
  {
    if (newAddToOnlineBasket != addToOnlineBasket)
    {
      NotificationChain msgs = null;
      if (addToOnlineBasket != null)
        msgs = ((InternalEObject)addToOnlineBasket).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET, null, msgs);
      if (newAddToOnlineBasket != null)
        msgs = ((InternalEObject)newAddToOnlineBasket).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET, null, msgs);
      msgs = basicSetAddToOnlineBasket(newAddToOnlineBasket, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET, newAddToOnlineBasket, newAddToOnlineBasket));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH:
        return basicSetItemSearch(null, msgs);
      case SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET:
        return basicSetAddToOnlineBasket(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH:
        return getItemSearch();
      case SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET:
        return getAddToOnlineBasket();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH:
        setItemSearch((ItemDef)newValue);
        return;
      case SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET:
        setAddToOnlineBasket((AddToOnlineBasket)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH:
        setItemSearch((ItemDef)null);
        return;
      case SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET:
        setAddToOnlineBasket((AddToOnlineBasket)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case SelfCheckoutExperiencePackage.SEARCH__ITEM_SEARCH:
        return itemSearch != null;
      case SelfCheckoutExperiencePackage.SEARCH__ADD_TO_ONLINE_BASKET:
        return addToOnlineBasket != null;
    }
    return super.eIsSet(featureID);
  }

} //SearchImpl
